#!/usr/bin/python

import argparse

parser = argparse.ArgumentParser(
        description='A simple script to create a thumbmail'
        )

parser.add_argument(
        'photo',
        type=str,
        help='speaker photo'
        )

parser.add_argument(
        'title',
        type=str,
        help='video title'
        )

parser.add_argument(
        'speaker',
        type=str,
        help='speaker name'
        )

parser.add_argument(
        'focus',
        help='larger color',
        type=int
        )

from PIL import Image, ImageDraw, ImageFont
from os.path import exists

def write_text(text: str, font_size: float,
        text_color: str, img,
        top_gap: float, left_gap: float) -> None:

    size = int(width*font_size)
    font = ImageFont.truetype(font_path, size)
    axis = font.getsize(text)

    x = int(width*left_gap - (axis[0]//2))
    y = int(height*top_gap - (axis[1]//2))

    axis = (x, y)
    img.text(axis, text, fill = text_color, font=font)

def draw_4_colors(img: Image.Image) -> None:

    back = Image.new(mode = "RGBA",
            size = (width, height),
            color = black)

    size = back.size

    start_y = 0
    color = colors[4]
    for x in range(size[0] - 1, -1, -1):
        if start_y > size[1] - 1:
            break
        for y in range(start_y, size[1]-1):
            axis = (x, y)
            back.putpixel(axis, color)
        start_y += 2

    for start_x in range(size[0] - 1, -1, -1):
        color = colors[(start_x * 4) // size[0]]
        y = 0
        for x in range(start_x, -1, -1):
            if y > size[1] - 1:
                break
            axis = (x, y)
            back.putpixel(axis, color)
            axis = (x, y + 1)
            back.putpixel(axis, color)
            y += 2

    img.alpha_composite(back, (0,0))

opacity = 0.75

EACH  = (255,   2, 158, int(255 * opacity))
IME   = (255, 120,  37, int(255 * opacity))
UFABC = (7,   139,   1, int(255 * opacity))
SANCA = (94,  200, 174, int(255 * opacity))

colors = [EACH, IME, UFABC, SANCA]

white  = "#FFFFFF"
black  = "#000000"

font_path = '/usr/share/fonts/adobe-source-code-pro/SourceCodePro-Semibold.otf'

if not exists(font_path):
    print('font_path not found')
    exit()

if __name__ == '__main__':

    args = parser.parse_args()
    focus: int = args.focus
    photo = args.photo
    speaker = args.speaker
    title = args.title

    global width, heigth

    # Draw Speaker photo
    thumbmail = Image.open(photo)
    width, height = thumbmail.size

    # Draw 4 colors
    if focus < 0  or focus > 3:
        print("focus need to be 0 - EACH, 1 - IME, 2 - UFABC or 3 - SANCA")
        exit()
    colors.insert(focus, colors[focus])
    draw_4_colors(thumbmail)

    # Write title and speakers name
    thumb_draw = ImageDraw.Draw(thumbmail)

    write_text(text=title, font_size=0.045, text_color=white,
            img=thumb_draw, top_gap=0.6, left_gap=0.5)

    write_text(text=speaker, font_size=0.035, text_color=white,
            img=thumb_draw, top_gap=0.7, left_gap=0.5)

    # Draw Code Lab Template
    code_lab_logo = Image.open('./code_lab_template.png')
    thumbmail.alpha_composite(code_lab_logo, (0,0))
    thumbmail.save(f'./{speaker}.png')
