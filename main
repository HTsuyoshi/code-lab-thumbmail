#!/usr/bin/python

import argparse

parser = argparse.ArgumentParser(
        description='A simple script to create a thumbmail'
        )

parser.add_argument(
        'photo',
        type=str
        )

parser.add_argument(
        'title',
        type=str
        )

parser.add_argument(
        'speaker_name',
        type=str
        )

parser.add_argument(
        'focus',
        help='the bigger color',
        type=int
        )


from PIL import Image, ImageDraw, ImageFont


def write_text(text: str, font_size: float,
        color: str, img,
        top_gap: float, left_gap: float) -> None:

    size = int(width*font_size)
    font = ImageFont.truetype(font_path, size)
    axis = font.getsize(text)

    x = int(width*left_gap - (axis[0]//2))
    y = int(height*top_gap - (axis[1])//2)

    axis = (x, y)
    img.text(axis, text, fill = color, font=font)


def resize_image(ratio: float, img: Image.Image) -> Image.Image:
    size = int(img.size[0] * ratio), int(img.size[1] * ratio)
    img = img.resize(size)
    return img


def draw_4_colors(img: Image.Image) -> Image.Image:
    size = img.size

    start_y = 0
    color = colors[4]
    for x in range(size[0] - 1, -1, -1):
        if start_y > size[1] - 1:
            break
        for y in range(start_y, size[1]-1):
            axis = (x, y)
            img.putpixel(axis, color)
        start_y += 2

    for start_x in range(size[0] - 1, -1, -1):
        color = colors[(start_x * 4) // size[0]]
        y = 0
        for x in range(start_x, -1, -1):
            if y > size[1] - 1:
                break
            axis = (x, y)
            img.putpixel(axis, color)
            axis = (x, y + 1)
            img.putpixel(axis, color)
            y += 2


    return img

font_path = '/usr/share/fonts/adobe-source-code-pro/SourceCodePro-Semibold.otf'

width, height = 1920, 1080

opacity = 0.75

white  = "#FFFFFF"
black  = "#000000"
color1 = (255, 2, 158, int(255 * opacity))
color2 = (255, 120, 37, int(255 * opacity))
color3 = (7, 139, 1, int(255 * opacity))
color4 = (94, 200, 174, int(255 * opacity))

colors = [color1, color2, color3, color4]

if __name__ == '__main__':

    args = parser.parse_args()

    focus = args.focus
    if focus > 4 or focus < 1:
        print("Focus need to be between 1 and 4")
        exit
    colors.insert(focus, colors[focus])

    photo = args.photo
    speaker = args.speaker_name
    title = args.title

    thumbmail= Image.new(mode = "RGBA",
            size = (width, height),
            color = black)

    thumb_draw = ImageDraw.Draw(thumbmail)

    #speaker_img = Image.open(speaker)
    #thumbmail.alpha_composite(speaker_img, (0,0))

    draw_4_colors(thumbmail)

    write_text(text=title, font_size=0.045, color=white,
            img=thumb_draw, top_gap=0.53, left_gap=0.5)

    write_text(text=speaker, font_size=0.035, color=white,
            img=thumb_draw, top_gap=0.7, left_gap=0.5)

    code_lab_logo = Image.open('./code_lab.png')
    thumbmail.alpha_composite(code_lab_logo, (0,0))

    thumbmail.save('./thumbmail.png')
